// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoonBuck.DataAccess.Data;

#nullable disable

namespace MoonBuck.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231021074112_AddRoleAndSlotToDb")]
    partial class AddRoleAndSlotToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoonBuck.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Chef"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Cashier"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Waiter"
                        });
                });

            modelBuilder.Entity("MoonBuck.Models.Slot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CafeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFilled")
                        .HasColumnType("bit");

                    b.Property<double>("PayRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Slots");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CafeName = "MoonBuck Toa Payoh",
                            EndTime = new DateTime(2023, 10, 23, 1, 17, 12, 390, DateTimeKind.Local).AddTicks(3714),
                            IsFilled = false,
                            PayRate = 9.0,
                            StartTime = new DateTime(2023, 10, 22, 15, 41, 12, 390, DateTimeKind.Local).AddTicks(3697)
                        },
                        new
                        {
                            Id = 2,
                            CafeName = "MoonBuck Toa Payoh",
                            EndTime = new DateTime(2023, 10, 24, 1, 17, 12, 390, DateTimeKind.Local).AddTicks(3717),
                            IsFilled = false,
                            PayRate = 9.0,
                            StartTime = new DateTime(2023, 10, 23, 15, 41, 12, 390, DateTimeKind.Local).AddTicks(3718)
                        },
                        new
                        {
                            Id = 3,
                            CafeName = "MoonBuck Tampines",
                            EndTime = new DateTime(2023, 10, 24, 1, 17, 12, 390, DateTimeKind.Local).AddTicks(3720),
                            IsFilled = false,
                            PayRate = 9.0,
                            StartTime = new DateTime(2023, 10, 23, 15, 41, 12, 390, DateTimeKind.Local).AddTicks(3721)
                        },
                        new
                        {
                            Id = 4,
                            CafeName = "MoonBuck Hougang",
                            EndTime = new DateTime(2023, 10, 25, 1, 17, 12, 390, DateTimeKind.Local).AddTicks(3722),
                            IsFilled = false,
                            PayRate = 9.0,
                            StartTime = new DateTime(2023, 10, 24, 15, 41, 12, 390, DateTimeKind.Local).AddTicks(3723)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
